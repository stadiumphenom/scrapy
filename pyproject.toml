##############################
# Build System
##############################
[build-system]
requires = ["hatchling>=1.27.0"]
build-backend = "hatchling.build"

##############################
# Project Metadata
##############################
[project]
name = "Scrapy"
version = "2.13.3"
dynamic = ["version"]
description = "A high-level Web Crawling and Web Scraping framework"
readme = "README.rst"
license = "BSD-3-Clause"
license-files = ["LICENSE", "AUTHORS"]
requires-python = ">=3.9,<3.9.7 || >3.9.7"
authors = [{ name = "Scrapy developers", email = "pablo@pablohoffman.com" }]
maintainers = [{ name = "Pablo Hoffman", email = "pablo@pablohoffman.com" }]

dependencies = [
    "Twisted>=21.7.0",
    "cryptography>=37.0.0",
    "cssselect>=0.9.1",
    "defusedxml>=0.7.1",
    "itemadapter>=0.1.0",
    "itemloaders>=1.0.1",
    "lxml>=4.6.0",
    "packaging",
    "parsel>=1.5.0",
    "protego>=0.1.15",
    "pyOpenSSL>=22.0.0",
    "queuelib>=1.4.2",
    "service_identity>=18.1.0",
    "tldextract",
    "w3lib>=1.17.0",
    "zope.interface>=5.1.0",
    'PyDispatcher>=2.0.5; platform_python_implementation == "CPython"',
    'PyPyDispatcher>=2.1.0; platform_python_implementation == "PyPy"',
]

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Framework :: Scrapy",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.urls]
Homepage = "https://scrapy.org/"
Documentation = "https://docs.scrapy.org/"
Source = "https://github.com/scrapy/scrapy"
Tracker = "https://github.com/scrapy/scrapy/issues"
"Release notes" = "https://docs.scrapy.org/en/latest/news.html"

[project.scripts]
scrapy = "scrapy.cmdline:execute"

##############################
# Hatch Build
##############################
[tool.hatch.build.targets.sdist]
include = [
  "/docs", "/extras", "/scrapy", "/tests", "/tests_typing",
  "/CODE_OF_CONDUCT.md", "/CONTRIBUTING.md", "/INSTALL.md", "/NEWS",
  "/SECURITY.md", "/codecov.yml", "/conftest.py", "/tox.ini"
]

[tool.hatch.version]
path = "scrapy/VERSION"
pattern = "^(?P<version>.+)$"

##############################
# Type Checking (mypy)
##############################
[tool.mypy]
ignore_missing_imports = true
implicit_reexport = false

[[tool.mypy.overrides]]
module = "twisted.internet.interfaces"
follow_imports = "skip"

[[tool.mypy.overrides]]
module = "scrapy.interfaces"
ignore_errors = true

[[tool.mypy.overrides]]
module = "twisted.internet.reactor"
follow_imports = "skip"

[[tool.mypy.overrides]]
module = "scrapy.settings.default_settings"
ignore_errors = true

[[tool.mypy.overrides]]
module = "twisted"
implicit_reexport = true

##############################
# Ruff (Lint & Format)
##############################
[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
extend-select = [
    "A","ASYNC","B","C4","COM","D","FA","FLY","FURB","I","ISC","LOG","PERF",
    "PGH","PIE","PL","PT","PTH","PYI","Q","RET","RSE","RUF","S","SIM","SLOT",
    "T10","TC","TID","UP","W","YTT"
]
ignore = [
    "COM812","D100","D101","D102","D103","D104","D105","D106","D107","D200",
    "D202","D205","D209","D400","D401","D402","D403","PERF203","PLC0414",
    "PLR0911","PLR0912","PLR0913","PLR0915","PLR2004","PLW2901","RUF001",
    "RUF002","RUF003","RUF012","S101","S321","S503","SIM115","SIM300",
    "B003","B006","B007","B008","B018","B026","B028","B904","SIM112"
]

[tool.ruff.lint.flake8-tidy-imports]
banned-module-level-imports = [
    "twisted.internet.reactor",
    "twisted.conch.manhole",
    "twisted.protocols.ftp",
]

[tool.ruff.lint.isort]
split-on-trailing-comma = false

[tool.ruff.lint.per-file-ignores]
"scrapy/linkextractors/__init__.py" = ["E402"]
"scrapy/spiders/__init__.py" = ["E402"]
"tests/**" = ["S"]
"docs/conf.py" = ["E402"]
"scrapy/utils/url.py" = ["F403","F405"]
"tests/test_loader.py" = ["E741"]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

##############################
# Pylint
##############################
[tool.pylint.MASTER]
persistent = "no"
jobs = 1
extension-pkg-allow-list=["lxml"]

[tool.pylint."MESSAGES CONTROL"]
enable = ["useless-suppression"]
fail-on = "I"
disable = [
    "attribute-defined-outside-init","broad-exception-caught","consider-using-with",
    "cyclic-import","disallowed-name","duplicate-code","fixme","import-outside-toplevel",
    "inherit-non-class","invalid-name","invalid-overridden-method",
    "isinstance-second-argument-not-valid-type","line-too-long",
    "logging-format-interpolation","logging-fstring-interpolation",
    "logging-not-lazy","missing-docstring","no-member","no-value-for-parameter",
    "not-callable","protected-access","redefined-builtin","redefined-outer-name",
    "too-few-public-methods","too-many-ancestors","too-many-arguments",
    "too-many-branches","too-many-function-args","too-many-instance-attributes",
    "too-many-lines","too-many-locals","too-many-positional-arguments",
    "too-many-public-methods","too-many-return-statements","unused-argument",
    "unused-import","unused-variable","useless-import-alias","useless-return",
    "wrong-import-position","abstract-method","arguments-differ","arguments-renamed",
    "dangerous-default-value","keyword-arg-before-vararg","pointless-statement",
    "raise-missing-from","unnecessary-dunder-call","used-before-assignment"
]

##############################
# Pytest
##############################
[tool.pytest.ini_options]
addopts = ["--reactor=asyncio"]
xfail_strict = true
python_files = ["test_*.py", "test_*/__init__.py"]
markers = [
    "only_asyncio","only_not_asyncio","requires_uvloop","requires_botocore","requires_boto3"
]
filterwarnings = ["ignore::DeprecationWarning:twisted.web.static"]

##############################
# Coverage
##############################
[tool.coverage.run]
branch = true
include = ["scrapy/*"]
omit = ["tests/*"]
disable_warnings = ["include-ignored"]
patch = ["subprocess"]

[tool.coverage.paths]
source = ["scrapy",".tox/**/site-packages/scrapy"]

[tool.coverage.report]
exclude_also = ["if TYPE_CHECKING:","@(abc\\.)?abstractmethod"]

##############################
# Bumpversion
##############################
[tool.bumpversion]
current_version = "2.13.3"
commit = true
tag = true
tag_name = "{new_version}"

[[tool.bumpversion.files]]
filename = "docs/news.rst"
search = "\\(unreleased\\)$"
replace = "({now:%Y-%m-%d})"
regex = true

[[tool.bumpversion.files]]
filename = "scrapy/VERSION"

[[tool.bumpversion.files]]
filename = "SECURITY.md"
parse = """(?P<major>0|[1-9]\\d*)\\.(?P<minor>0|[1-9]\\d*)"""
serialize = ["{major}.{minor}"]
